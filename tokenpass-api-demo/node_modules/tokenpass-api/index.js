var request = require('request');

var requestGetPromise = function(_url, _postHeaders, body){
  return new Promise(function(resolve, reject) {
    var options = {
      url: _url,
      method : 'GET',
      headers: _postHeaders,
      qs: body
    };
     
    request(options, function (error, response, body) {
      if (!error && response.statusCode == 200) {
        var info = JSON.parse(body);
        resolve(info)
      }
      else{
		var err = JSON.parse(body);  
        reject(err)
      }
    });
  });
}


var requestPostPromise = function(_url, _postHeaders, _postData){
  return new Promise(function(resolve, reject) {
    var data = _postData || {}
    var options = {
      url: _url,
      headers: _postHeaders,
      method: 'POST',
      body: JSON.stringify(data)
    };
     
    request(options, function (error, response, body) {

      if (!error && response.statusCode == 200) {
        var info = JSON.parse(body);
        resolve(info)
      }
      else{
        reject(error)
      }
    });
  });
}



var TOKENPASS = function (_clientId,_clientSecret,_apiUrl) {
  this.client_id = _clientId;
  this.client_secret = _clientSecret;
  this.api_url = _apiUrl;
  console.log(' init clinet id: '+ this.client_id)
  console.log(' init client_secret: '+ this.client_secret)
  console.log(' init api_url: '+ this.api_url)
}



TOKENPASS.prototype.checkTokenAccess = function (username,rules,oauth_token) {
  rules.client_id = this.client_id
  rules.oauth_token = oauth_token
  var URL = this.api_url+'/api/v1/tca/check/'+username;
  var headers = {}
  /*var headers = {
      'Authorization': 'Bearer '+ this.token
  }*/
  return requestGetPromise(URL, headers, rules)
}

module.exports = TOKENPASS
